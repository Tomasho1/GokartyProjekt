// <auto-generated />
using System;
using GokartyProjekt.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace GokartyProjekt.Migrations
{
    [DbContext(typeof(GokartyDbContext))]
    [Migration("20200818152031_SetDBAndSeedSampleData")]
    partial class SetDBAndSeedSampleData
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("GokartyProjekt.Models.Adres", b =>
                {
                    b.Property<int>("IdAdres")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Miasto")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("Panstwo")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("Ulica")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.HasKey("IdAdres");

                    b.ToTable("Adresy");

                    b.HasData(
                        new
                        {
                            IdAdres = 1,
                            Miasto = "Monza",
                            Panstwo = "Włochy",
                            Ulica = "Viale di Vedano, 5"
                        },
                        new
                        {
                            IdAdres = 2,
                            Miasto = "Stavelot",
                            Panstwo = "Belgia",
                            Ulica = "Route du Circuit 55"
                        },
                        new
                        {
                            IdAdres = 3,
                            Miasto = "Zandvoort",
                            Panstwo = "Holandia",
                            Ulica = "Burgemeester van Alphenstraat 108"
                        });
                });

            modelBuilder.Entity("GokartyProjekt.Models.Gokart", b =>
                {
                    b.Property<int>("IdGokart")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("IdNadwozie")
                        .HasColumnType("int");

                    b.Property<int>("IdPodwozie")
                        .HasColumnType("int");

                    b.Property<int>("IdSilnik")
                        .HasColumnType("int");

                    b.Property<int>("IdTor")
                        .HasColumnType("int");

                    b.Property<string>("Nazwa")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<int>("Waga")
                        .HasColumnType("int");

                    b.HasKey("IdGokart");

                    b.HasIndex("IdNadwozie");

                    b.HasIndex("IdPodwozie");

                    b.HasIndex("IdSilnik");

                    b.HasIndex("IdTor");

                    b.ToTable("Gokarty");

                    b.HasData(
                        new
                        {
                            IdGokart = 1,
                            IdNadwozie = 2,
                            IdPodwozie = 2,
                            IdSilnik = 2,
                            IdTor = 3,
                            Nazwa = "Junior",
                            Waga = 150
                        },
                        new
                        {
                            IdGokart = 2,
                            IdNadwozie = 1,
                            IdPodwozie = 1,
                            IdSilnik = 1,
                            IdTor = 1,
                            Nazwa = "Standard",
                            Waga = 160
                        },
                        new
                        {
                            IdGokart = 3,
                            IdNadwozie = 3,
                            IdPodwozie = 3,
                            IdSilnik = 3,
                            IdTor = 2,
                            Nazwa = "Standard+",
                            Waga = 180
                        });
                });

            modelBuilder.Entity("GokartyProjekt.Models.Kierowca", b =>
                {
                    b.Property<int>("IdKierowca")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("IdUzytkownik")
                        .HasColumnType("int");

                    b.Property<string>("Imie")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nazwisko")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NumerKarty")
                        .IsRequired()
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<int>("Wiek")
                        .HasColumnType("int");

                    b.HasKey("IdKierowca");

                    b.HasIndex("IdUzytkownik")
                        .IsUnique();

                    b.ToTable("Kierowcy");

                    b.HasData(
                        new
                        {
                            IdKierowca = 1,
                            IdUzytkownik = 1,
                            Imie = "Tomasz",
                            Nazwisko = "Kowalski",
                            NumerKarty = "k1704",
                            Wiek = 21
                        },
                        new
                        {
                            IdKierowca = 2,
                            IdUzytkownik = 2,
                            Imie = "Marcin",
                            Nazwisko = "Pędziwiatr",
                            NumerKarty = "k898",
                            Wiek = 16
                        },
                        new
                        {
                            IdKierowca = 3,
                            IdUzytkownik = 3,
                            Imie = "Jakub",
                            Nazwisko = "Mazur",
                            NumerKarty = "k19",
                            Wiek = 18
                        });
                });

            modelBuilder.Entity("GokartyProjekt.Models.KierowcaSponsor", b =>
                {
                    b.Property<int>("IdKierowca")
                        .HasColumnType("int");

                    b.Property<int?>("IdSponsor")
                        .HasColumnType("int");

                    b.HasKey("IdKierowca", "IdSponsor");

                    b.HasIndex("IdSponsor");

                    b.ToTable("KierowcaSponsor");

                    b.HasData(
                        new
                        {
                            IdKierowca = 1,
                            IdSponsor = 2
                        },
                        new
                        {
                            IdKierowca = 2,
                            IdSponsor = 1
                        },
                        new
                        {
                            IdKierowca = 3,
                            IdSponsor = 3
                        });
                });

            modelBuilder.Entity("GokartyProjekt.Models.Nadwozie", b =>
                {
                    b.Property<int>("IdNadwozie")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Producent")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdNadwozie");

                    b.ToTable("Nadwozia");

                    b.HasData(
                        new
                        {
                            IdNadwozie = 1,
                            Producent = "Alfa Romeo"
                        },
                        new
                        {
                            IdNadwozie = 2,
                            Producent = "Honda"
                        },
                        new
                        {
                            IdNadwozie = 3,
                            Producent = "Chevrolet"
                        });
                });

            modelBuilder.Entity("GokartyProjekt.Models.Podwozie", b =>
                {
                    b.Property<int>("IdPodwozie")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Producent")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdPodwozie");

                    b.ToTable("Podwozia");

                    b.HasData(
                        new
                        {
                            IdPodwozie = 1,
                            Producent = "Alfa Romeo"
                        },
                        new
                        {
                            IdPodwozie = 2,
                            Producent = "Honda"
                        },
                        new
                        {
                            IdPodwozie = 3,
                            Producent = "Chevrolet"
                        });
                });

            modelBuilder.Entity("GokartyProjekt.Models.Pracownik", b =>
                {
                    b.Property<int>("IdPracownik")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("IdTor")
                        .HasColumnType("int");

                    b.Property<int>("IdUzytkownik")
                        .HasColumnType("int");

                    b.Property<string>("Imie")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nazwisko")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Stanowisko")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<int>("Wiek")
                        .HasColumnType("int");

                    b.Property<decimal>("Wynagrodzenie")
                        .HasColumnType("money");

                    b.HasKey("IdPracownik");

                    b.HasIndex("IdTor");

                    b.HasIndex("IdUzytkownik")
                        .IsUnique();

                    b.ToTable("Pracownicy");

                    b.HasData(
                        new
                        {
                            IdPracownik = 1,
                            IdTor = 1,
                            IdUzytkownik = 1,
                            Imie = "Paweł",
                            Nazwisko = "Wójcik",
                            Stanowisko = "Recepcjonista",
                            Wiek = 25,
                            Wynagrodzenie = 3300m
                        },
                        new
                        {
                            IdPracownik = 2,
                            IdTor = 2,
                            IdUzytkownik = 2,
                            Imie = "Robert",
                            Nazwisko = "Walczak",
                            Stanowisko = "Instruktor",
                            Wiek = 31,
                            Wynagrodzenie = 4500m
                        },
                        new
                        {
                            IdPracownik = 3,
                            IdTor = 3,
                            IdUzytkownik = 3,
                            Imie = "Krzysztof",
                            Nazwisko = "Błyskawica",
                            Stanowisko = "Kierownik toru",
                            Wiek = 28,
                            Wynagrodzenie = 5500m
                        });
                });

            modelBuilder.Entity("GokartyProjekt.Models.Przejazd", b =>
                {
                    b.Property<int>("IdPrzejazd")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<TimeSpan>("Czas")
                        .HasColumnType("time");

                    b.Property<DateTime>("DataPrzejazdu")
                        .HasColumnType("datetime");

                    b.Property<int>("IdGokart")
                        .HasColumnType("int");

                    b.Property<int>("IdKierowca")
                        .HasColumnType("int");

                    b.Property<int>("IdTor")
                        .HasColumnType("int");

                    b.HasKey("IdPrzejazd");

                    b.HasIndex("IdGokart");

                    b.HasIndex("IdKierowca");

                    b.HasIndex("IdTor");

                    b.ToTable("Przejazdy");

                    b.HasData(
                        new
                        {
                            IdPrzejazd = 1,
                            Czas = new TimeSpan(0, 0, 4, 25, 732),
                            DataPrzejazdu = new DateTime(2020, 6, 18, 11, 33, 47, 0, DateTimeKind.Unspecified),
                            IdGokart = 3,
                            IdKierowca = 1,
                            IdTor = 1
                        },
                        new
                        {
                            IdPrzejazd = 2,
                            Czas = new TimeSpan(0, 0, 4, 27, 319),
                            DataPrzejazdu = new DateTime(2019, 12, 20, 17, 2, 13, 0, DateTimeKind.Unspecified),
                            IdGokart = 3,
                            IdKierowca = 1,
                            IdTor = 1
                        },
                        new
                        {
                            IdPrzejazd = 3,
                            Czas = new TimeSpan(0, 0, 4, 25, 588),
                            DataPrzejazdu = new DateTime(2019, 10, 13, 16, 45, 38, 0, DateTimeKind.Unspecified),
                            IdGokart = 3,
                            IdKierowca = 1,
                            IdTor = 1
                        },
                        new
                        {
                            IdPrzejazd = 4,
                            Czas = new TimeSpan(0, 0, 3, 59, 711),
                            DataPrzejazdu = new DateTime(2020, 7, 18, 14, 7, 16, 0, DateTimeKind.Unspecified),
                            IdGokart = 3,
                            IdKierowca = 2,
                            IdTor = 3
                        },
                        new
                        {
                            IdPrzejazd = 5,
                            Czas = new TimeSpan(0, 0, 3, 59, 646),
                            DataPrzejazdu = new DateTime(2020, 7, 18, 14, 12, 29, 0, DateTimeKind.Unspecified),
                            IdGokart = 3,
                            IdKierowca = 2,
                            IdTor = 3
                        },
                        new
                        {
                            IdPrzejazd = 6,
                            Czas = new TimeSpan(0, 0, 4, 2, 11),
                            DataPrzejazdu = new DateTime(2018, 10, 23, 20, 0, 36, 0, DateTimeKind.Unspecified),
                            IdGokart = 3,
                            IdKierowca = 2,
                            IdTor = 3
                        },
                        new
                        {
                            IdPrzejazd = 7,
                            Czas = new TimeSpan(0, 0, 5, 38, 412),
                            DataPrzejazdu = new DateTime(2019, 8, 30, 15, 56, 4, 0, DateTimeKind.Unspecified),
                            IdGokart = 3,
                            IdKierowca = 3,
                            IdTor = 2
                        },
                        new
                        {
                            IdPrzejazd = 8,
                            Czas = new TimeSpan(0, 0, 5, 41, 774),
                            DataPrzejazdu = new DateTime(2019, 9, 16, 9, 14, 36, 0, DateTimeKind.Unspecified),
                            IdGokart = 3,
                            IdKierowca = 3,
                            IdTor = 2
                        },
                        new
                        {
                            IdPrzejazd = 9,
                            Czas = new TimeSpan(0, 0, 5, 37, 292),
                            DataPrzejazdu = new DateTime(2020, 8, 17, 12, 37, 40, 0, DateTimeKind.Unspecified),
                            IdGokart = 3,
                            IdKierowca = 3,
                            IdTor = 2
                        });
                });

            modelBuilder.Entity("GokartyProjekt.Models.Silnik", b =>
                {
                    b.Property<int>("IdSilnik")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Moc")
                        .HasColumnType("int");

                    b.Property<double>("Pojemnosc")
                        .HasColumnType("float");

                    b.Property<string>("Producent")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.HasKey("IdSilnik");

                    b.ToTable("Silniki");

                    b.HasData(
                        new
                        {
                            IdSilnik = 1,
                            Moc = 20,
                            Pojemnosc = 600.0,
                            Producent = "Mercedes"
                        },
                        new
                        {
                            IdSilnik = 2,
                            Moc = 15,
                            Pojemnosc = 350.0,
                            Producent = "Audi"
                        },
                        new
                        {
                            IdSilnik = 3,
                            Moc = 25,
                            Pojemnosc = 800.0,
                            Producent = "Ferrari"
                        });
                });

            modelBuilder.Entity("GokartyProjekt.Models.Sponsor", b =>
                {
                    b.Property<int>("IdSponsor")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Nazwa")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdSponsor");

                    b.ToTable("Sponsorzy");

                    b.HasData(
                        new
                        {
                            IdSponsor = 1,
                            Nazwa = "ORLEN"
                        },
                        new
                        {
                            IdSponsor = 2,
                            Nazwa = "STS"
                        },
                        new
                        {
                            IdSponsor = 3,
                            Nazwa = "PEKAO"
                        });
                });

            modelBuilder.Entity("GokartyProjekt.Models.Sprzet", b =>
                {
                    b.Property<int>("IdSprzet")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("IdKierowca")
                        .HasColumnType("int");

                    b.Property<double>("Koszt")
                        .HasColumnType("float");

                    b.Property<string>("Nazwa")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.HasKey("IdSprzet");

                    b.HasIndex("IdKierowca");

                    b.ToTable("Sprzety");

                    b.HasData(
                        new
                        {
                            IdSprzet = 1,
                            IdKierowca = 1,
                            Koszt = 25.0,
                            Nazwa = "Kask czerwony mały"
                        },
                        new
                        {
                            IdSprzet = 2,
                            Koszt = 15.0,
                            Nazwa = "Rękawice czarne normalne"
                        },
                        new
                        {
                            IdSprzet = 3,
                            IdKierowca = 3,
                            Koszt = 10.0,
                            Nazwa = "Kominiarka normalna"
                        });
                });

            modelBuilder.Entity("GokartyProjekt.Models.Tor", b =>
                {
                    b.Property<int>("IdTor")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double>("Dlugosc")
                        .HasColumnType("float");

                    b.Property<int>("IdAdres")
                        .HasColumnType("int");

                    b.Property<string>("Nazwa")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<decimal>("StawkaGodzinowa")
                        .HasColumnType("money");

                    b.HasKey("IdTor");

                    b.HasIndex("IdAdres")
                        .IsUnique();

                    b.ToTable("Tory");

                    b.HasData(
                        new
                        {
                            IdTor = 1,
                            Dlugosc = 5.7930000000000001,
                            IdAdres = 1,
                            Nazwa = "Autodromo Nazionale di Monza",
                            StawkaGodzinowa = 400m
                        },
                        new
                        {
                            IdTor = 2,
                            Dlugosc = 7.0039999999999996,
                            IdAdres = 2,
                            Nazwa = "Circuit de Spa-Francorchamps",
                            StawkaGodzinowa = 450m
                        },
                        new
                        {
                            IdTor = 3,
                            Dlugosc = 4.2519999999999998,
                            IdAdres = 3,
                            Nazwa = "Circuit Zandvoort",
                            StawkaGodzinowa = 350m
                        });
                });

            modelBuilder.Entity("GokartyProjekt.Models.Uzytkownik", b =>
                {
                    b.Property<int>("IdUzytkownik")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Haslo")
                        .HasColumnType("nvarchar(30)")
                        .HasMaxLength(30);

                    b.Property<string>("Login")
                        .HasColumnType("nvarchar(30)")
                        .HasMaxLength(30);

                    b.HasKey("IdUzytkownik");

                    b.ToTable("Uzytkownicy");

                    b.HasData(
                        new
                        {
                            IdUzytkownik = 1,
                            Haslo = "kowalski12",
                            Login = "tkowalski"
                        },
                        new
                        {
                            IdUzytkownik = 2,
                            Haslo = "pedziwiatr2016",
                            Login = "mpedzi"
                        },
                        new
                        {
                            IdUzytkownik = 3,
                            Haslo = "mazurek",
                            Login = "jmazur"
                        },
                        new
                        {
                            IdUzytkownik = 4,
                            Haslo = "wojcik95",
                            Login = "pwojcik"
                        },
                        new
                        {
                            IdUzytkownik = 5,
                            Haslo = "walczakxd",
                            Login = "rwalczak"
                        },
                        new
                        {
                            IdUzytkownik = 6,
                            Haslo = "krzysiekblyskawica",
                            Login = "krzysiu44"
                        });
                });

            modelBuilder.Entity("GokartyProjekt.Models.Gokart", b =>
                {
                    b.HasOne("GokartyProjekt.Models.Nadwozie", "Nadwozie")
                        .WithMany("Gokarty")
                        .HasForeignKey("IdNadwozie")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("GokartyProjekt.Models.Podwozie", "Podwozie")
                        .WithMany("Gokarty")
                        .HasForeignKey("IdPodwozie")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("GokartyProjekt.Models.Silnik", "Silnik")
                        .WithMany("Gokarty")
                        .HasForeignKey("IdSilnik")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("GokartyProjekt.Models.Tor", "Tor")
                        .WithMany("Gokarty")
                        .HasForeignKey("IdTor")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();
                });

            modelBuilder.Entity("GokartyProjekt.Models.Kierowca", b =>
                {
                    b.HasOne("GokartyProjekt.Models.Uzytkownik", "Uzytkownik")
                        .WithOne("Kierowca")
                        .HasForeignKey("GokartyProjekt.Models.Kierowca", "IdUzytkownik")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();
                });

            modelBuilder.Entity("GokartyProjekt.Models.KierowcaSponsor", b =>
                {
                    b.HasOne("GokartyProjekt.Models.Kierowca", "Kierowca")
                        .WithMany("KierowcaSponsor")
                        .HasForeignKey("IdKierowca")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("GokartyProjekt.Models.Sponsor", "Sponsor")
                        .WithMany("KierowcaSponsor")
                        .HasForeignKey("IdSponsor")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();
                });

            modelBuilder.Entity("GokartyProjekt.Models.Pracownik", b =>
                {
                    b.HasOne("GokartyProjekt.Models.Tor", "Tor")
                        .WithMany("Pracownicy")
                        .HasForeignKey("IdTor")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("GokartyProjekt.Models.Uzytkownik", "Uzytkownik")
                        .WithOne("Pracownik")
                        .HasForeignKey("GokartyProjekt.Models.Pracownik", "IdUzytkownik")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();
                });

            modelBuilder.Entity("GokartyProjekt.Models.Przejazd", b =>
                {
                    b.HasOne("GokartyProjekt.Models.Gokart", "Gokart")
                        .WithMany("Przejazdy")
                        .HasForeignKey("IdGokart")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("GokartyProjekt.Models.Kierowca", "Kierowca")
                        .WithMany("Przejazdy")
                        .HasForeignKey("IdKierowca")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("GokartyProjekt.Models.Tor", "Tor")
                        .WithMany("Przejazdy")
                        .HasForeignKey("IdTor")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();
                });

            modelBuilder.Entity("GokartyProjekt.Models.Sprzet", b =>
                {
                    b.HasOne("GokartyProjekt.Models.Kierowca", "Kierowca")
                        .WithMany("Sprzety")
                        .HasForeignKey("IdKierowca")
                        .OnDelete(DeleteBehavior.NoAction);
                });

            modelBuilder.Entity("GokartyProjekt.Models.Tor", b =>
                {
                    b.HasOne("GokartyProjekt.Models.Adres", "Adres")
                        .WithOne("Tor")
                        .HasForeignKey("GokartyProjekt.Models.Tor", "IdAdres")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
